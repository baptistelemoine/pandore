{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n/** @jsx jsx */\n\nimport { jsx } from \"@emotion/core\";\nimport { Children, cloneElement, useState, useRef, forwardRef, useImperativeHandle, isValidElement } from \"react\";\nimport { useId } from \"@reach/auto-id\";\nimport Box from \"../Box\";\nimport { cleanChildren } from \"../utils\";\nvar RadioGroup = forwardRef(function (_ref, ref) {\n  var onChange = _ref.onChange,\n      name = _ref.name,\n      variantColor = _ref.variantColor,\n      size = _ref.size,\n      defaultValue = _ref.defaultValue,\n      isInline = _ref.isInline,\n      valueProp = _ref.value,\n      _ref$spacing = _ref.spacing,\n      spacing = _ref$spacing === void 0 ? 2 : _ref$spacing,\n      children = _ref.children,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"onChange\", \"name\", \"variantColor\", \"size\", \"defaultValue\", \"isInline\", \"value\", \"spacing\", \"children\"]);\n\n  var _useRef = useRef(valueProp != null),\n      isControlled = _useRef.current;\n\n  var _useState = useState(defaultValue || null),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var _value = isControlled ? valueProp : value;\n\n  var rootRef = useRef();\n\n  var _onChange = function _onChange(event) {\n    if (!isControlled) {\n      setValue(event.target.value);\n    }\n\n    if (onChange) {\n      onChange(event, event.target.value);\n    }\n  }; // If no name is passed, we'll generate a random, unique name\n\n\n  var fallbackName = \"radio-\" + useId();\n\n  var _name = name || fallbackName;\n\n  var validChildren = cleanChildren(children);\n  var clones = validChildren.map(function (child, index) {\n    var isLastRadio = validChildren.length === index + 1;\n    var spacingProps = isInline ? {\n      mr: spacing\n    } : {\n      mb: spacing\n    };\n    return jsx(Box, _extends({\n      display: isInline ? \"inline-block\" : \"block\"\n    }, !isLastRadio && spacingProps), cloneElement(child, {\n      size: child.props.size || size,\n      variantColor: child.props.variantColor || variantColor,\n      name: _name,\n      onChange: _onChange,\n      isChecked: child.props.value === _value\n    }));\n  }); // Calling focus() on the radiogroup should focus on the selected option or first enabled option\n\n  useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        var input = rootRef.current.querySelector(\"input:not(:disabled):checked\");\n\n        if (!input) {\n          input = rootRef.current.querySelector(\"input:not(:disabled)\");\n        }\n\n        if (input) {\n          input.focus();\n        }\n      }\n    };\n  }, []);\n  return jsx(Box, _extends({\n    ref: rootRef,\n    role: \"radiogroup\"\n  }, rest), clones);\n});\nRadioGroup.displayName = \"RadioGroup\";\nexport default RadioGroup;","map":{"version":3,"sources":["/Users/baptiste/Projects/marvel/app/node_modules/@chakra-ui/core/dist/es/RadioGroup/index.js"],"names":["_extends","_objectWithoutPropertiesLoose","jsx","Children","cloneElement","useState","useRef","forwardRef","useImperativeHandle","isValidElement","useId","Box","cleanChildren","RadioGroup","_ref","ref","onChange","name","variantColor","size","defaultValue","isInline","valueProp","value","_ref$spacing","spacing","children","rest","_useRef","isControlled","current","_useState","setValue","_value","rootRef","_onChange","event","target","fallbackName","_name","validChildren","clones","map","child","index","isLastRadio","length","spacingProps","mr","mb","display","props","isChecked","focus","input","querySelector","role","displayName"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/objectWithoutPropertiesLoose\";\n\n/** @jsx jsx */\nimport { jsx } from \"@emotion/core\";\nimport { Children, cloneElement, useState, useRef, forwardRef, useImperativeHandle, isValidElement } from \"react\";\nimport { useId } from \"@reach/auto-id\";\nimport Box from \"../Box\";\nimport { cleanChildren } from \"../utils\";\nvar RadioGroup = forwardRef(function (_ref, ref) {\n  var onChange = _ref.onChange,\n      name = _ref.name,\n      variantColor = _ref.variantColor,\n      size = _ref.size,\n      defaultValue = _ref.defaultValue,\n      isInline = _ref.isInline,\n      valueProp = _ref.value,\n      _ref$spacing = _ref.spacing,\n      spacing = _ref$spacing === void 0 ? 2 : _ref$spacing,\n      children = _ref.children,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"onChange\", \"name\", \"variantColor\", \"size\", \"defaultValue\", \"isInline\", \"value\", \"spacing\", \"children\"]);\n\n  var _useRef = useRef(valueProp != null),\n      isControlled = _useRef.current;\n\n  var _useState = useState(defaultValue || null),\n      value = _useState[0],\n      setValue = _useState[1];\n\n  var _value = isControlled ? valueProp : value;\n\n  var rootRef = useRef();\n\n  var _onChange = function _onChange(event) {\n    if (!isControlled) {\n      setValue(event.target.value);\n    }\n\n    if (onChange) {\n      onChange(event, event.target.value);\n    }\n  }; // If no name is passed, we'll generate a random, unique name\n\n\n  var fallbackName = \"radio-\" + useId();\n\n  var _name = name || fallbackName;\n\n  var validChildren = cleanChildren(children);\n  var clones = validChildren.map(function (child, index) {\n    var isLastRadio = validChildren.length === index + 1;\n    var spacingProps = isInline ? {\n      mr: spacing\n    } : {\n      mb: spacing\n    };\n    return jsx(Box, _extends({\n      display: isInline ? \"inline-block\" : \"block\"\n    }, !isLastRadio && spacingProps), cloneElement(child, {\n      size: child.props.size || size,\n      variantColor: child.props.variantColor || variantColor,\n      name: _name,\n      onChange: _onChange,\n      isChecked: child.props.value === _value\n    }));\n  }); // Calling focus() on the radiogroup should focus on the selected option or first enabled option\n\n  useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        var input = rootRef.current.querySelector(\"input:not(:disabled):checked\");\n\n        if (!input) {\n          input = rootRef.current.querySelector(\"input:not(:disabled)\");\n        }\n\n        if (input) {\n          input.focus();\n        }\n      }\n    };\n  }, []);\n  return jsx(Box, _extends({\n    ref: rootRef,\n    role: \"radiogroup\"\n  }, rest), clones);\n});\nRadioGroup.displayName = \"RadioGroup\";\nexport default RadioGroup;"]},"metadata":{},"sourceType":"module"}